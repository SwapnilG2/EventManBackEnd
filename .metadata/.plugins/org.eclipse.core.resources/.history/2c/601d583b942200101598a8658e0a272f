package com.eventa.booking.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.eventa.booking.client.NotificationClient;
import com.eventa.booking.dto.NotificationRequest;
import com.eventa.booking.entity.Booking;
import com.eventa.booking.entity.BookingStatus;
import com.eventa.booking.repository.BookingRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class BookingServiceImpl implements BookingService{
	
	@Autowired
	private NotificationClient notificationClient;
	
	private final BookingRepository bookingRepository;

    @Override
    public Booking createBooking(Booking booking) {
        booking.setStatus(BookingStatus.CONFIRMED);
        booking.setBookingDate(java.time.LocalDateTime.now());
        
        Booking savedBooking = bookingRepository.save(booking);

        // Send notification
        notificationClient.sendNotification(
            new NotificationRequest(
                savedBooking.getUserEmail(),
                "Booking Confirmed",
                "Your booking for " + savedBooking.getEventName() + " is confirmed on " + savedBooking.getBookingDate()
            )
        
        return savedBooking;
    }

    @Override
    public Booking getBookingById(Long id) {
        return bookingRepository.findById(id)
                .orElseThrow(() -> new RuntimeException("Booking not found"));
    }

    @Override
    public List<Booking> getAllBookings() {
        return bookingRepository.findAll();
    }

    @Override
    public void cancelBooking(Long id) {
        Booking booking = getBookingById(id);
        booking.setStatus(BookingStatus.CANCELLED);
        bookingRepository.save(booking);
    }
    
    
}
